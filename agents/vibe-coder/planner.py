import subprocess
import textwrap
from pathlib import Path
import shutil

def next_task(coh, ledger):
    """
    This is the new, vibec-powered planner.
    For this MVP, it will always execute the gas optimization task.
    """

    class Task:
        id = "task-gas-optimization-001"
        title = "feat(gas): Optimize TimeChain.sol for gas efficiency"
        rationale = textwrap.dedent("""
            This change applies several gas optimization techniques to the
            `TimeChain.sol` smart contract to reduce its deployment and
            runtime costs.

            This was generated by the Z(n) Vibe-Coder Agent using the
            Vibe Compiler (vibec).
        """)

        def generate_patch(self):
            """
            Runs the Vibe Compiler to generate a patch for the task.
            """
            root_dir = Path(__file__).parent.parent.parent
            vibec_workspace = Path(__file__).parent / "vibec_workspace"

            # Copy context files to the vibec workspace
            context_file = root_dir / "TimeChain.sol"
            shutil.copy(context_file, vibec_workspace)

            # Run vibec as a subprocess
            try:
                result = subprocess.run(
                    [
                        "npx",
                        "vibec",
                        "--workdir",
                        str(vibec_workspace),
                        "--output",
                        str(vibec_workspace / "output"),
                    ],
                    check=True,
                    capture_output=True,
                    text=True,
                )
                print(result.stdout)
                print(result.stderr)
            except subprocess.CalledProcessError as e:
                print("Error running vibec:")
                print(e.stdout)
                print(e.stderr)
                raise

            # Read the generated patch file
            patch_file = vibec_workspace / "output/current/patches/001_gas_optimization.patch"
            if not patch_file.exists():
                raise FileNotFoundError("vibec did not generate the expected patch file.")

            return patch_file.read_text()

    return Task()
